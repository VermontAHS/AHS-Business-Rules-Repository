<root schema-version="1" product-version="10.4.6.76">
  <entities>
    <entity ref="global">
      <attribute name="p7" type="text" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>this state's abbreviation</base>
        </text>
      </attribute>
    </entity>
    <entity name="the person" id="person" containment-relationship-id="people" containment-parent-id="global">
      <attribute name="b5" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the person has multiple residential addresses</base>
          <parse>s(ver('10.4.6.76'),v(have,t(simple,present,normal)),sb('the person',singular),o('multiple residential addresses'))</parse>
        </text>
      </attribute>
      <attribute name="b6" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the person lives in this state</base>
          <parse>s(ver('10.4.6.76'),v(live,t(simple,present,normal)),sb('the person',singular),o('in this state'))</parse>
        </text>
      </attribute>
      <attribute name="b21" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the person is absent from the person's residential address</base>
          <parse>s(ver('10.4.6.76'),v(be,t(simple,present,normal)),sb('the person',singular),o('absent from the person''s residential address'))</parse>
        </text>
      </attribute>
    </entity>
    <entity name="the group member" id="groupmember" containment-relationship-id="personsgroupmembers" containment-parent-id="person">
      <attribute name="b7" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the group member lives with the person</base>
          <parse>s(ver('10.4.6.76'),v(live,t(simple,present,normal)),sb('the group member',singular),o('with the person'))</parse>
        </text>
      </attribute>
      <attribute name="b8" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the group member shares a residential address with the person</base>
          <parse>s(ver('10.4.6.76'),v(share,t(simple,present,normal)),sb('the group member',singular),o('a residential address with the person'))</parse>
        </text>
      </attribute>
      <attribute name="b9" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the group member is absent from the person's residential address</base>
          <parse>s(ver('10.4.6.76'),v(be,t(simple,present,normal)),sb('the group member',singular),o('absent from the person''s residential address'))</parse>
        </text>
      </attribute>
      <attribute name="b11" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the group member will return to the person's residential address by the end of the month following the month in which the group member left</base>
          <parse>s(ver('10.4.6.76'),v(return,t(simple,future,normal)),sb('the group member',plural),o('to the person''s residential address by the end of the month following the month in which the group member left'))</parse>
        </text>
      </attribute>
      <attribute name="b13" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the group member is absent from the person's residential address to attend school</base>
          <parse>s(ver('10.4.6.76'),v(be,t(simple,present,normal)),sb('the group member',singular),o('absent from the person''s residential address to attend school'))</parse>
        </text>
      </attribute>
      <attribute name="b15" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the group member returns to the person's residential address for vacations, holidays, or some weekends</base>
          <parse>s(ver('10.4.6.76'),v(return,t(simple,present,normal)),sb('the group member',singular),o('to the person''s residential address for vacations, holidays, or some weekends'))</parse>
        </text>
      </attribute>
      <attribute name="b17" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the group member is absent from the person's residential address due to a duty assignment as a member of the armed forces on active duty</base>
          <parse>s(ver('10.4.6.76'),v(be,t(simple,present,normal)),sb('the group member',singular),o('absent from the person''s residential address due to a duty assignment as a member of the armed forces on active duty'))</parse>
        </text>
      </attribute>
      <attribute name="b19" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>there is evidence that indicates that the group member should no longer be considered to be living at the person's residential address</base>
          <parse>s(ver('10.4.6.76'),v(be,t(simple,present,normal)),sb('there',singular),o('evidence that indicates that the group member should no longer be considered to be living at the person''s residential address'))</parse>
        </text>
      </attribute>
    </entity>
    <entity name="the person's address" id="personsaddress" containment-relationship-id="personsaddresses" containment-parent-id="person">
      <attribute name="b1" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the person's address is active</base>
          <parse>s(ver('10.4.6.76'),v(be,t(simple,present,normal)),sb('the person''s address',singular),o('active'))</parse>
        </text>
      </attribute>
      <attribute name="b3" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the person's address is the person's active residential address</base>
          <parse>s(ver('10.4.6.76'),v(be,t(simple,present,normal)),sb('the person''s address',singular),o('the person''s active residential address'))</parse>
        </text>
      </attribute>
      <attribute name="b4" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the person's address is a residential address</base>
          <parse>s(ver('10.4.6.76'),v(be,t(simple,present,normal)),sb('the person''s address',singular),o('a residential address'))</parse>
        </text>
      </attribute>
      <attribute name="b10" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the person is absent from the person's address</base>
          <parse>s(ver('10.4.6.76'),v(be,t(simple,present,normal)),sb('the person',singular),o('absent from the person''s address'))</parse>
        </text>
      </attribute>
      <attribute name="b20" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>there is evidence that indicates that the person should no longer be considered to be living at the person's address</base>
          <parse>s(ver('10.4.6.76'),v(be,t(simple,present,normal)),sb('there',singular),o('evidence that indicates that the person should no longer be considered to be living at the person''s address'))</parse>
        </text>
      </attribute>
      <attribute name="p1" type="date" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the person's address's start date</base>
        </text>
      </attribute>
      <attribute name="p2" type="date" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the person's address's end date</base>
        </text>
      </attribute>
      <attribute name="p5" type="text" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the person's address</base>
        </text>
      </attribute>
      <attribute name="p6" type="text" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the person's address's state</base>
        </text>
      </attribute>
      <attribute name="p9" type="text" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the person's address's target address's unique ID</base>
        </text>
      </attribute>
      <attribute name="p10" type="text" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the person's address's street</base>
        </text>
      </attribute>
      <attribute name="p12" type="text" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the person's address's street 2</base>
        </text>
      </attribute>
      <attribute name="p14" type="text" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the person's address's city</base>
        </text>
      </attribute>
      <attribute name="p17" type="text" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the person's address's postal code</base>
        </text>
      </attribute>
    </entity>
    <entity name="the address" id="address" containment-relationship-id="addresses" containment-parent-id="global">
      <attribute name="p8" type="text" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the address's unique ID</base>
        </text>
      </attribute>
      <attribute name="p11" type="text" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the address's street</base>
        </text>
      </attribute>
      <attribute name="p13" type="text" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the address's street 2</base>
        </text>
      </attribute>
      <attribute name="p15" type="text" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the address's city</base>
        </text>
      </attribute>
      <attribute name="p16" type="text" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the address's state</base>
        </text>
      </attribute>
      <attribute name="p18" type="text" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the address's postal code</base>
        </text>
      </attribute>
    </entity>
    <entity name="the person's absence" id="personsabsence" containment-relationship-id="absencesfromthepersonsaddress" containment-parent-id="personsaddress">
      <attribute name="b2" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the person's absence is active</base>
          <parse>s(ver('10.4.6.76'),v(be,t(simple,present,normal)),sb('the person''s absence',singular),o('active'))</parse>
        </text>
      </attribute>
      <attribute name="b12" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the person's absence ends on or before the end of the month following the month in which the person's absence began</base>
          <parse>s(ver('10.4.6.76'),v(end,t(simple,present,normal)),sb('the person''s absence',singular),o('on or before the end of the month following the month in which the person''s absence began'))</parse>
        </text>
      </attribute>
      <attribute name="b14" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the person's absence is for school</base>
          <parse>s(ver('10.4.6.76'),v(be,t(simple,present,normal)),sb('the person''s absence',singular),o('for school'))</parse>
        </text>
      </attribute>
      <attribute name="b16" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the person returns during the person's absence for vacations, holidays, or some weekends</base>
          <parse>s(ver('10.4.6.76'),v(return,t(simple,present,normal)),sb('the person',singular),o('during the person''s absence for vacations, holidays, or some weekends'))</parse>
        </text>
      </attribute>
      <attribute name="b18" type="boolean" ruleburst="true" is-used="True">
        <text lang="en-US">
          <base>the person's absence is due to a duty assignment as a member of the armed forces on active duty</base>
          <parse>s(ver('10.4.6.76'),v(be,t(simple,present,normal)),sb('the person''s absence',singular),o('due to a duty assignment as a member of the armed forces on active duty'))</parse>
        </text>
      </attribute>
      <attribute name="p3" type="date" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the person's absence's start date</base>
        </text>
      </attribute>
      <attribute name="p4" type="date" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the person's absence's end date</base>
        </text>
      </attribute>
      <attribute name="p19" type="date" ruleburst="true" is-used="True" default-gender="neuter">
        <text lang="en-US">
          <base>the end of the month following the month in which the person's absence began</base>
        </text>
      </attribute>
    </entity>
  </entities>
  <relationships>
    <relationship type="ManyToMany" relationship-id="groupmembersrepresentativeperson" reverse-relationship-id="personsrepresentationsasagroupmember" text="the group member's representative person" reverse-text="the person's representations as a group member" source="groupmember" target="person" is-implicit="false" is-containment="false" />
    <relationship type="OneToMany" relationship-id="absencesfromthepersonsaddress" reverse-relationship-id="personsabsencesaddress" text="the absences from the person's address" reverse-text="the person's absence's address" source="personsaddress" target="personsabsence" is-implicit="false" is-containment="true" />
    <relationship type="ManyToMany" relationship-id="personsaddressstargetaddress" reverse-relationship-id="addressstargetaddresses" text="the person's address's target address" reverse-text="the address's target addresses" source="personsaddress" target="address" is-implicit="false" is-containment="false" />
    <relationship type="OneToMany" relationship-id="personsgroupmembers" reverse-relationship-id="groupmemberscontainingperson" text="the person's group members" reverse-text="the group member's containing person" source="person" target="groupmember" is-implicit="false" is-containment="true" />
    <relationship type="OneToMany" relationship-id="personsaddresses" reverse-relationship-id="personsaddressperson" text="the person's addresses" reverse-text="the person's address' person" source="person" target="personsaddress" is-implicit="false" is-containment="true" />
    <relationship type="OneToMany" relationship-id="addresses" reverse-relationship-id="global_addresses_rev" text="the addresses" source="global" target="address" is-implicit="false" is-containment="true" />
    <relationship type="OneToMany" relationship-id="people" reverse-relationship-id="global_people_rev" text="the people" source="global" target="person" is-implicit="false" is-containment="true" />
  </relationships>
  <rules>
    <rule id="0" name="the person's address is active" ruleburst="true" concludes="b1" folder="0" source-offset="2">
      <rule-xml>
        <conclude attr-id="b1" entity-id="personsaddress" scope-id="personsaddress0">
          <value>
            <true-value />
          </value>
          <condition>
            <and>
              <or>
                <unknown>
                  <attribute attr-id="p1" />
                </unknown>
                <uncertain>
                  <attribute attr-id="p1" />
                </uncertain>
                <temporal-on-or-after>
                  <attribute attr-id="p1" />
                </temporal-on-or-after>
              </or>
              <or>
                <unknown>
                  <attribute attr-id="p2" />
                </unknown>
                <uncertain>
                  <attribute attr-id="p2" />
                </uncertain>
                <temporal-on-or-before>
                  <attribute attr-id="p2" />
                </temporal-on-or-before>
              </or>
            </and>
          </condition>
          <otherwise>
            <false-value />
          </otherwise>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="1" name="the person's absence is active" ruleburst="true" concludes="b2" folder="0" source-offset="457">
      <rule-xml>
        <conclude attr-id="b2" entity-id="personsabsence" scope-id="personsabsence0">
          <value>
            <true-value />
          </value>
          <condition>
            <and>
              <or>
                <unknown>
                  <attribute attr-id="p3" />
                </unknown>
                <uncertain>
                  <attribute attr-id="p3" />
                </uncertain>
                <temporal-on-or-after>
                  <attribute attr-id="p3" />
                </temporal-on-or-after>
              </or>
              <or>
                <unknown>
                  <attribute attr-id="p4" />
                </unknown>
                <uncertain>
                  <attribute attr-id="p4" />
                </uncertain>
                <temporal-on-or-before>
                  <attribute attr-id="p4" />
                </temporal-on-or-before>
              </or>
            </and>
          </condition>
          <otherwise>
            <false-value />
          </otherwise>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="2" name="the person's address is the person's active residential address" ruleburst="true" concludes="b3" folder="0" source-offset="912">
      <rule-xml>
        <conclude attr-id="b3" entity-id="personsaddress" scope-id="personsaddress0">
          <value>
            <true-value />
          </value>
          <condition>
            <and>
              <attribute attr-id="b1" />
              <attribute attr-id="b4" />
            </and>
          </condition>
          <otherwise>
            <false-value />
          </otherwise>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="3" name="the person has multiple residential addresses" ruleburst="true" concludes="b5" folder="0" source-offset="1077">
      <rule-xml>
        <conclude attr-id="b5" entity-id="person" scope-id="person0">
          <value>
            <true-value />
          </value>
          <condition>
            <greater-than>
              <instance-count-if>
                <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
                <attribute attr-id="b3" />
              </instance-count-if>
              <number-value>1</number-value>
            </greater-than>
          </condition>
          <otherwise>
            <false-value />
          </otherwise>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="4" name="the person lives in this state" ruleburst="true" concludes="b6" folder="0" source-offset="1285">
      <rule-xml>
        <conclude attr-id="b6" entity-id="person" scope-id="person0">
          <value>
            <true-value />
          </value>
          <condition>
            <exists scope-id="personsaddress0">
              <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
              <and>
                <attribute attr-id="b3" />
                <equals>
                  <attribute attr-id="p6" />
                  <scope-for scope-ref="global0" target-entity-id="global">
                    <attribute attr-id="p7" />
                  </scope-for>
                </equals>
              </and>
            </exists>
          </condition>
          <otherwise>
            <false-value />
          </otherwise>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="5" name="the address is a member of the person's address's target address" ruleburst="true" concludes="IsMemberOf(&quot;address&quot;, personsaddressstargetaddress)" folder="0" source-offset="1537">
      <rule-xml>
        <conclude-rel relationship-id="personsaddressstargetaddress" source="personsaddress" source-scope-id="personsaddress0" target-scope-id="address0">
          <condition>
            <equals>
              <attribute attr-id="p8" />
              <scope-for scope-ref="personsaddress0" target-entity-id="personsaddress">
                <attribute attr-id="p9" />
              </scope-for>
            </equals>
          </condition>
        </conclude-rel>
      </rule-xml>
    </rule>
    <rule id="6" name="the person's address's street " ruleburst="true" concludes="p10 = InstanceValueIf(personsaddressstargetaddress,p11,true)" folder="0" source-offset="1747">
      <rule-xml>
        <conclude attr-id="p10" entity-id="personsaddress" scope-id="personsaddress0">
          <value>
            <instance-value-if>
              <relationship relationship-id="personsaddressstargetaddress" target-entity-id="address" />
              <attribute attr-id="p11" />
              <true-value />
            </instance-value-if>
          </value>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="7" name="the person's address's street 2 " ruleburst="true" concludes="p12 = InstanceValueIf(personsaddressstargetaddress,p13,true)" folder="0" source-offset="1931">
      <rule-xml>
        <conclude attr-id="p12" entity-id="personsaddress" scope-id="personsaddress0">
          <value>
            <instance-value-if>
              <relationship relationship-id="personsaddressstargetaddress" target-entity-id="address" />
              <attribute attr-id="p13" />
              <true-value />
            </instance-value-if>
          </value>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="8" name="the person's address's city " ruleburst="true" concludes="p14 = InstanceValueIf(personsaddressstargetaddress,p15,true)" folder="0" source-offset="2119">
      <rule-xml>
        <conclude attr-id="p14" entity-id="personsaddress" scope-id="personsaddress0">
          <value>
            <instance-value-if>
              <relationship relationship-id="personsaddressstargetaddress" target-entity-id="address" />
              <attribute attr-id="p15" />
              <true-value />
            </instance-value-if>
          </value>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="9" name="the person's address's state " ruleburst="true" concludes="p6 = InstanceValueIf(personsaddressstargetaddress,p16,true)" folder="0" source-offset="2299">
      <rule-xml>
        <conclude attr-id="p6" entity-id="personsaddress" scope-id="personsaddress0">
          <value>
            <instance-value-if>
              <relationship relationship-id="personsaddressstargetaddress" target-entity-id="address" />
              <attribute attr-id="p16" />
              <true-value />
            </instance-value-if>
          </value>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="10" name="the person's address's postal code " ruleburst="true" concludes="p17 = InstanceValueIf(personsaddressstargetaddress,p18,true)" folder="0" source-offset="2480">
      <rule-xml>
        <conclude attr-id="p17" entity-id="personsaddress" scope-id="personsaddress0">
          <value>
            <instance-value-if>
              <relationship relationship-id="personsaddressstargetaddress" target-entity-id="address" />
              <attribute attr-id="p18" />
              <true-value />
            </instance-value-if>
          </value>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="11" name="the group member shares a residential address with the person" ruleburst="true" concludes="b8" folder="0" source-offset="2730">
      <rule-xml>
        <conclude attr-id="b8" entity-id="groupmember" scope-id="groupmember0">
          <value>
            <true-value />
          </value>
          <condition>
            <for scope-id="the member">
              <relationship relationship-id="groupmembersrepresentativeperson" target-entity-id="person" />
              <scope-for scope-ref="groupmember0" target-entity-id="groupmember">
                <for scope-id="person1">
                  <relationship relationship-id="groupmemberscontainingperson" target-entity-id="person" />
                  <or>
                    <instance-equals>
                      <scope-ref id="the member" />
                      <scope-ref id="person1" />
                    </instance-equals>
                    <and>
                      <instance-not-equals>
                        <scope-ref id="the member" />
                        <scope-ref id="person1" />
                      </instance-not-equals>
                      <exists scope-id="personsaddress0">
                        <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
                        <and>
                          <attribute attr-id="b3" />
                          <scope-for scope-ref="the member" target-entity-id="person">
                            <exists scope-id="the member's address">
                              <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
                              <and>
                                <attribute attr-id="b3" />
                                <equals>
                                  <scope-for scope-ref="personsaddress0" target-entity-id="personsaddress">
                                    <attribute attr-id="p9" />
                                  </scope-for>
                                  <attribute attr-id="p9" />
                                </equals>
                              </and>
                            </exists>
                          </scope-for>
                        </and>
                      </exists>
                    </and>
                  </or>
                </for>
              </scope-for>
            </for>
          </condition>
          <otherwise>
            <false-value />
          </otherwise>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="12" name="the group member lives with the person" ruleburst="true" concludes="b7" folder="0" source-offset="3799">
      <rule-xml>
        <conclude attr-id="b7" entity-id="groupmember" scope-id="groupmember0">
          <value>
            <true-value />
          </value>
          <condition>
            <for scope-id="the member">
              <relationship relationship-id="groupmembersrepresentativeperson" target-entity-id="person" />
              <scope-for scope-ref="groupmember0" target-entity-id="groupmember">
                <for scope-id="person1">
                  <relationship relationship-id="groupmemberscontainingperson" target-entity-id="person" />
                  <or>
                    <instance-equals>
                      <scope-ref id="the member" />
                      <scope-ref id="person1" />
                    </instance-equals>
                    <and>
                      <instance-not-equals>
                        <scope-ref id="the member" />
                        <scope-ref id="person1" />
                      </instance-not-equals>
                      <exists scope-id="personsaddress0">
                        <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
                        <and>
                          <attribute attr-id="b3" />
                          <not>
                            <attribute attr-id="b10" />
                          </not>
                          <scope-for scope-ref="the member" target-entity-id="person">
                            <exists scope-id="the member's address">
                              <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
                              <and>
                                <attribute attr-id="b3" />
                                <not>
                                  <attribute attr-id="b10" />
                                </not>
                                <equals>
                                  <scope-for scope-ref="personsaddress0" target-entity-id="personsaddress">
                                    <attribute attr-id="p9" />
                                  </scope-for>
                                  <attribute attr-id="p9" />
                                </equals>
                              </and>
                            </exists>
                          </scope-for>
                        </and>
                      </exists>
                    </and>
                  </or>
                </for>
              </scope-for>
            </for>
          </condition>
          <otherwise>
            <false-value />
          </otherwise>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="13" name="the person is absent from the person's residential address" ruleburst="true" concludes="b21" folder="0" source-offset="4952">
      <rule-xml>
        <conclude attr-id="b21" entity-id="person" scope-id="person0">
          <value>
            <true-value />
          </value>
          <condition>
            <exists scope-id="personsaddress0">
              <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
              <and>
                <attribute attr-id="b3" />
                <attribute attr-id="b10" />
              </and>
            </exists>
          </condition>
          <otherwise>
            <false-value />
          </otherwise>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="14" name="the group member is absent from the person's residential address" ruleburst="true" concludes="b9" folder="0" source-offset="5215">
      <rule-xml>
        <conclude attr-id="b9" entity-id="groupmember" scope-id="groupmember0">
          <value>
            <true-value />
          </value>
          <condition>
            <for>
              <relationship relationship-id="groupmemberscontainingperson" target-entity-id="person" />
              <exists scope-id="personsaddress0">
                <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
                <and>
                  <attribute attr-id="b3" />
                  <scope-for scope-ref="groupmember0" target-entity-id="groupmember">
                    <for scope-id="the member">
                      <relationship relationship-id="groupmembersrepresentativeperson" target-entity-id="person" />
                      <exists scope-id="the member's address">
                        <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
                        <and>
                          <attribute attr-id="b3" />
                          <equals>
                            <scope-for scope-ref="personsaddress0" target-entity-id="personsaddress">
                              <attribute attr-id="p9" />
                            </scope-for>
                            <attribute attr-id="p9" />
                          </equals>
                          <attribute attr-id="b10" />
                        </and>
                      </exists>
                    </for>
                  </scope-for>
                </and>
              </exists>
            </for>
          </condition>
          <otherwise>
            <false-value />
          </otherwise>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="15" name="the person is absent from the person's address" ruleburst="true" concludes="b10" folder="0" source-offset="6056">
      <rule-xml>
        <conclude attr-id="b10" entity-id="personsaddress" scope-id="personsaddress0">
          <value>
            <true-value />
          </value>
          <condition>
            <exists scope-id="personsabsence0">
              <relationship relationship-id="absencesfromthepersonsaddress" target-entity-id="personsabsence" />
              <attribute attr-id="b2" />
            </exists>
          </condition>
          <otherwise>
            <false-value />
          </otherwise>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="16" name="the group member will return to the person's residential address by the end of the month following the month in which the group member left" ruleburst="true" concludes="b11" folder="0" source-offset="6248">
      <rule-xml>
        <table-conclude attr-id="b11" entity-id="groupmember" scope-id="groupmember0">
          <row>
            <value>
              <uncertain-value />
            </value>
            <condition>
              <not>
                <attribute attr-id="b9" />
              </not>
            </condition>
          </row>
          <row>
            <value>
              <true-value />
            </value>
            <condition>
              <for>
                <relationship relationship-id="groupmemberscontainingperson" target-entity-id="person" />
                <exists scope-id="personsaddress0">
                  <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
                  <and>
                    <attribute attr-id="b3" />
                    <scope-for scope-ref="groupmember0" target-entity-id="groupmember">
                      <for scope-id="the member">
                        <relationship relationship-id="groupmembersrepresentativeperson" target-entity-id="person" />
                        <exists scope-id="the member's address">
                          <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
                          <and>
                            <attribute attr-id="b3" />
                            <equals>
                              <scope-for scope-ref="personsaddress0" target-entity-id="personsaddress">
                                <attribute attr-id="p9" />
                              </scope-for>
                              <attribute attr-id="p9" />
                            </equals>
                            <exists scope-id="the member's absence">
                              <relationship relationship-id="absencesfromthepersonsaddress" target-entity-id="personsabsence" />
                              <and>
                                <attribute attr-id="b2" />
                                <attribute attr-id="b12" />
                              </and>
                            </exists>
                          </and>
                        </exists>
                      </for>
                    </scope-for>
                  </and>
                </exists>
              </for>
            </condition>
          </row>
          <otherwise>
            <false-value />
          </otherwise>
        </table-conclude>
      </rule-xml>
    </rule>
    <rule id="17" name="the person's absence ends on or before the end of the month following the month in which the person's absence began" ruleburst="true" concludes="b12" folder="0" source-offset="7620">
      <rule-xml>
        <conclude attr-id="b12" entity-id="personsabsence" scope-id="personsabsence0">
          <value>
            <true-value />
          </value>
          <condition>
            <and>
              <not>
                <unknown>
                  <attribute attr-id="p3" />
                </unknown>
              </not>
              <not>
                <unknown>
                  <attribute attr-id="p4" />
                </unknown>
              </not>
              <less-than-equals>
                <attribute attr-id="p4" />
                <attribute attr-id="p19" />
              </less-than-equals>
            </and>
          </condition>
          <otherwise>
            <false-value />
          </otherwise>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="18" name="the end of the month following the month in which the person's absence began " ruleburst="true" concludes="p19 = AddDays(AddMonths(MakeDate(ExtractYear(p3),ExtractMonth(p3),1),2),-1)" folder="0" source-offset="8016">
      <rule-xml>
        <conclude attr-id="p19" entity-id="personsabsence" scope-id="personsabsence0">
          <value>
            <add-days>
              <add-months>
                <make-date>
                  <extract-year>
                    <attribute attr-id="p3" />
                  </extract-year>
                  <extract-month>
                    <attribute attr-id="p3" />
                  </extract-month>
                  <number-value>1</number-value>
                </make-date>
                <number-value>2</number-value>
              </add-months>
              <negate>
                <number-value>1</number-value>
              </negate>
            </add-days>
          </value>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="19" name="the group member is absent from the person's residential address to attend school" ruleburst="true" concludes="b13" folder="0" source-offset="8318">
      <rule-xml>
        <conclude attr-id="b13" entity-id="groupmember" scope-id="groupmember0">
          <value>
            <true-value />
          </value>
          <condition>
            <for>
              <relationship relationship-id="groupmemberscontainingperson" target-entity-id="person" />
              <exists scope-id="personsaddress0">
                <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
                <and>
                  <attribute attr-id="b3" />
                  <scope-for scope-ref="groupmember0" target-entity-id="groupmember">
                    <for scope-id="the member">
                      <relationship relationship-id="groupmembersrepresentativeperson" target-entity-id="person" />
                      <exists scope-id="the member's address">
                        <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
                        <and>
                          <attribute attr-id="b3" />
                          <equals>
                            <scope-for scope-ref="personsaddress0" target-entity-id="personsaddress">
                              <attribute attr-id="p9" />
                            </scope-for>
                            <attribute attr-id="p9" />
                          </equals>
                          <exists scope-id="the member's absence">
                            <relationship relationship-id="absencesfromthepersonsaddress" target-entity-id="personsabsence" />
                            <and>
                              <attribute attr-id="b2" />
                              <attribute attr-id="b14" />
                            </and>
                          </exists>
                        </and>
                      </exists>
                    </for>
                  </scope-for>
                </and>
              </exists>
            </for>
          </condition>
          <otherwise>
            <false-value />
          </otherwise>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="20" name="the group member returns to the person's residential address for vacations, holidays, or some weekends" ruleburst="true" concludes="b15" folder="0" source-offset="9415">
      <rule-xml>
        <conclude attr-id="b15" entity-id="groupmember" scope-id="groupmember0">
          <value>
            <true-value />
          </value>
          <condition>
            <for>
              <relationship relationship-id="groupmemberscontainingperson" target-entity-id="person" />
              <exists scope-id="personsaddress0">
                <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
                <and>
                  <attribute attr-id="b3" />
                  <scope-for scope-ref="groupmember0" target-entity-id="groupmember">
                    <for scope-id="the member">
                      <relationship relationship-id="groupmembersrepresentativeperson" target-entity-id="person" />
                      <exists scope-id="the member's address">
                        <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
                        <and>
                          <attribute attr-id="b3" />
                          <equals>
                            <scope-for scope-ref="personsaddress0" target-entity-id="personsaddress">
                              <attribute attr-id="p9" />
                            </scope-for>
                            <attribute attr-id="p9" />
                          </equals>
                          <exists scope-id="the member's absence">
                            <relationship relationship-id="absencesfromthepersonsaddress" target-entity-id="personsabsence" />
                            <and>
                              <attribute attr-id="b2" />
                              <attribute attr-id="b16" />
                            </and>
                          </exists>
                        </and>
                      </exists>
                    </for>
                  </scope-for>
                </and>
              </exists>
            </for>
          </condition>
          <otherwise>
            <false-value />
          </otherwise>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="21" name="the group member is absent from the person's residential address due to a duty assignment as a member of the armed forces on active duty" ruleburst="true" concludes="b17" folder="0" source-offset="10587">
      <rule-xml>
        <conclude attr-id="b17" entity-id="groupmember" scope-id="groupmember0">
          <value>
            <true-value />
          </value>
          <condition>
            <for>
              <relationship relationship-id="groupmemberscontainingperson" target-entity-id="person" />
              <exists scope-id="personsaddress0">
                <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
                <and>
                  <attribute attr-id="b3" />
                  <scope-for scope-ref="groupmember0" target-entity-id="groupmember">
                    <for scope-id="the member">
                      <relationship relationship-id="groupmembersrepresentativeperson" target-entity-id="person" />
                      <exists scope-id="the member's address">
                        <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
                        <and>
                          <attribute attr-id="b3" />
                          <equals>
                            <scope-for scope-ref="personsaddress0" target-entity-id="personsaddress">
                              <attribute attr-id="p9" />
                            </scope-for>
                            <attribute attr-id="p9" />
                          </equals>
                          <exists scope-id="the member's absence">
                            <relationship relationship-id="absencesfromthepersonsaddress" target-entity-id="personsabsence" />
                            <and>
                              <attribute attr-id="b2" />
                              <attribute attr-id="b18" />
                            </and>
                          </exists>
                        </and>
                      </exists>
                    </for>
                  </scope-for>
                </and>
              </exists>
            </for>
          </condition>
          <otherwise>
            <false-value />
          </otherwise>
        </conclude>
      </rule-xml>
    </rule>
    <rule id="22" name="there is evidence that indicates that the group member should no longer be considered to be living at the person's residential address" ruleburst="true" concludes="b19" folder="0" source-offset="11800">
      <rule-xml>
        <conclude attr-id="b19" entity-id="groupmember" scope-id="groupmember0">
          <value>
            <true-value />
          </value>
          <condition>
            <for>
              <relationship relationship-id="groupmemberscontainingperson" target-entity-id="person" />
              <exists scope-id="personsaddress0">
                <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
                <and>
                  <attribute attr-id="b3" />
                  <scope-for scope-ref="groupmember0" target-entity-id="groupmember">
                    <for scope-id="the member">
                      <relationship relationship-id="groupmembersrepresentativeperson" target-entity-id="person" />
                      <exists scope-id="the member's address">
                        <relationship relationship-id="personsaddresses" target-entity-id="personsaddress" />
                        <and>
                          <attribute attr-id="b3" />
                          <equals>
                            <scope-for scope-ref="personsaddress0" target-entity-id="personsaddress">
                              <attribute attr-id="p9" />
                            </scope-for>
                            <attribute attr-id="p9" />
                          </equals>
                          <not>
                            <unknown>
                              <attribute attr-id="b20" />
                            </unknown>
                          </not>
                          <attribute attr-id="b20" />
                        </and>
                      </exists>
                    </for>
                  </scope-for>
                </and>
              </exists>
            </for>
          </condition>
          <otherwise>
            <false-value />
          </otherwise>
        </conclude>
      </rule-xml>
    </rule>
  </rules>
</root>